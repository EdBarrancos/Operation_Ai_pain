[gd_scene load_steps=14 format=2]

[ext_resource path="res://Player/Scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://ArtAssets/Quarto.png" type="Texture" id=2]
[ext_resource path="res://icon.png" type="Texture" id=3]
[ext_resource path="res://Scenes/Monster.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scripts/Room.gd" type="Script" id=5]
[ext_resource path="res://Scripts/VignetteShader.gd" type="Script" id=6]
[ext_resource path="res://Scripts/AudioServer.gd" type="Script" id=7]
[ext_resource path="res://Scenes/GUI.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scripts/SoupHandler.gd" type="Script" id=9]
[ext_resource path="res://Scenes/Soup.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/HungerBar.tscn" type="PackedScene" id=11]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D vignette;
uniform vec2 resolution = vec2(300, 168);

void fragment() {
	vec3 vignette_color = texture(vignette, UV).rgb;
	// Screen texture stores gaussian blurred copies on mipmaps.
	COLOR.rgb = textureLod(SCREEN_TEXTURE, SCREEN_UV, (1.0 - vignette_color.r) * 4.0).rgb;
	COLOR.rgb *= texture(vignette, UV).rgb;

    // determine center of texture
    vec2 position = (FRAGCOORD.xy / resolution.xy) - vec2(0.5, 0.5);

    // determine length of current pixel to center of texture
    float len = length(position);

    // visualize length for debugging purposes
    COLOR.a = len;


}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/resolution = Vector2( 300, 168 )

[node name="Room" type="Node2D"]
script = ExtResource( 5 )

[node name="Quarto_Base" type="Sprite" parent="."]
position = Vector2( -1.0607, 168.045 )
texture = ExtResource( 2 )

[node name="YSort" type="YSort" parent="."]

[node name="Player" parent="YSort" instance=ExtResource( 1 )]
position = Vector2( -1.69079, 168.017 )

[node name="Boxes" type="Node2D" parent="YSort"]

[node name="Bed" type="StaticBody2D" parent="YSort/Boxes"]

[node name="Bed" type="CollisionPolygon2D" parent="YSort/Boxes/Bed"]
polygon = PoolVector2Array( 220.969, 45.4622, 222.856, 119.084, 269.106, 117.668, 269.578, 43.1026 )

[node name="Box" type="StaticBody2D" parent="YSort/Boxes"]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="YSort/Boxes/Box"]
polygon = PoolVector2Array( 91.4464, 180.538, 101.458, 191.216, 132.159, 189.882, 131.158, 165.855, 105.462, 165.855, 91.4464, 156.511 )

[node name="SoupHandler" type="Node2D" parent="YSort"]
script = ExtResource( 9 )

[node name="Soup" parent="YSort/SoupHandler" instance=ExtResource( 10 )]
position = Vector2( 5.66327, 291.185 )

[node name="Soup2" parent="YSort/SoupHandler" instance=ExtResource( 10 )]
position = Vector2( 246.017, 285.423 )

[node name="Soup3" parent="YSort/SoupHandler" instance=ExtResource( 10 )]
position = Vector2( -250.788, 246.779 )

[node name="Soup4" parent="YSort/SoupHandler" instance=ExtResource( 10 )]
position = Vector2( -110.471, 62.8084 )

[node name="Monster" parent="." instance=ExtResource( 4 )]
initialHunger = 99

[node name="AudioServer" type="Node2D" parent="."]
script = ExtResource( 7 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="HungerBar" parent="CanvasLayer" instance=ExtResource( 11 )]
margin_left = 226.31
margin_top = 7.63224
margin_right = 318.31
margin_bottom = 32.6322
rect_scale = Vector2( 0.7, 0.7 )

[node name="Soups_counter" parent="CanvasLayer" instance=ExtResource( 8 )]
anchor_top = 0.998058
anchor_bottom = 0.998058
margin_left = -10.0
margin_top = -155.674
margin_right = -237.0
margin_bottom = -133.674

[node name="VignetteShader" type="Sprite" parent="CanvasLayer"]
modulate = Color( 0.223529, 0.0980392, 0.329412, 1 )
material = SubResource( 2 )
position = Vector2( 146.175, 84.6729 )
scale = Vector2( 5, 2.64961 )
texture = ExtResource( 3 )
script = ExtResource( 6 )
finalAlpha = 3.0

[connection signal="body_entered" from="YSort/SoupHandler/Soup" to="YSort/SoupHandler" method="_on_Soup_body_entered"]
[connection signal="body_entered" from="YSort/SoupHandler/Soup2" to="YSort/SoupHandler" method="_on_Soup2_body_entered"]
[connection signal="body_entered" from="YSort/SoupHandler/Soup3" to="YSort/SoupHandler" method="_on_Soup3_body_entered"]
[connection signal="body_entered" from="YSort/SoupHandler/Soup4" to="YSort/SoupHandler" method="_on_Soup4_body_entered"]
[connection signal="monster_got_hungrier" from="Monster" to="." method="_on_Monster_monster_got_hungrier"]
[connection signal="monster_is_full" from="Monster" to="." method="_on_Monster_monster_is_full"]
[connection signal="monster_is_hungry" from="Monster" to="." method="_on_Monster_monster_is_hungry"]
